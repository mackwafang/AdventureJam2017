<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>initGame();
display_set_gui_size(view_wview[0],view_hview[0]);
cmdString = ""; //Command String
blinker = 0;
deleteWait = 4; //Delete character wait time
deleteWaitMax = 5; //Delete character wait max time
discover = 0;
money = 0; //current money
breakin = false;
isReading = false;
readingPage = 0;
canWrite = 0; //able to write to console
days = 3; //game days
timeOfDay = 0; // 0: morning, 1: midday, 2: afternoon, 3: night
numMovements = 0; // Number of movements until time of day shifts
maxAlive = 60; //people alive at the start
gameStarted = false;
playerName = "";
getName = false;
stress = 0;
drunk = 0;
for(var i = 0; i &lt; 4; i++) {
    familyAlive[i] = true;
}
for(var i = 0 ; i &lt; 10; i++) {
    event[i] = 1;
    miniEvent[i] = 0;
}
inventory = ds_list_create();
yesNoPrompt = false
murder = false;
alive = maxAlive; //people left alive
currentLocation = 1; // odds = inside
currentLocationName = "Home"; //name of current location
dreamChance = 15; //chance of a dream
message = ds_list_create();
messageHistory = ds_list_create();
messageDelay = 0;
messageDelayQueue = ds_queue_create();
messageMaxSize = 25;
gameFont = font_add_sprite(spr_game_font,32,false,-7);
pigenFont = font_add_sprite_ext(spr_pigen_key,"ABCDEFGHIJKLMNOPQRSTUVWXYZ",false,3);
for(var i = 0; i &lt; messageMaxSize; i++) {
    messageDetail[i,0] = 0; //typewriter effect counter
    messageDetail[i,1] = ""; //typewriter effect string
    messageDetail[i,2] = gameFont; //typewriter effect string
}
sendMessage("@@@@@@@    @@@@@@    @@@@@@   @@@@@@   @@@@@@@@  @@@@@@@   ");
sendMessage("@@@@@@@@  @@@@@@@@  @@@@@@@  @@@@@@@   @@@@@@@@  @@@@@@@@  ");
sendMessage("@@!  @@@  @@!  @@@  !@@      !@@       @@!       @@!  @@@  ");
sendMessage("!@!  @!@  !@!  @!@  !@!      !@!       !@!       !@!  @!@  ");
sendMessage("@!@@!@!   @!@  !@!  !!@@!!   !!@@!!    @!!!:!    @!@  !@!  ");
sendMessage("!!@!!!    !@!  !!!   !!@!!!   !!@!!!   !!!!!:    !@!  !!!  ");
sendMessage("!!:       !!:  !!!       !:!      !:!  !!:       !!:  !!!  ");
sendMessage(":!:       :!:  !:!      !:!      !:!   :!:       :!:  !:!  ");
sendMessage(" ::       ::::: ::  :::: ::  :::: ::    :: ::::   :::: ::  ");
sendMessage(" :         : :  :   :: : :   :: : :    : :: ::   :: :  :   ");
sendMessage("           A game made for AdventureJam 2017");
sendMessage("                    by mackwafang");
sendMessage("                    Story by Nouvi");
repeat(8) sendMessage("");
sendDelayMessage("To start, type [start] and press &lt;enter&gt;",30);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(keyboard_check(vk_backspace)) { //Deleting characetrs
    if(deleteWait &lt; deleteWaitMax) {
        deleteWait++;
    }
    else {
        deleteWait = 0;
        if(deleteWaitMax &gt; 1) {deleteWaitMax -= 1;}
        cmdString = string_delete(cmdString,string_length(cmdString),1);
    }
}
else if(keyboard_check_released(vk_backspace)) {
    deleteWaitMax = 5;
    deleteWait = deleteWaitMax-1;
}
//Typing characters
if(canWrite) {
    if(keyboard_check_pressed(vk_anykey)) {
        if(!keyboard_check_pressed(vk_backspace)) {
            if(!keyboard_check_pressed(vk_enter)) {
                if(32 &lt;= keyboard_lastkey &amp;&amp; keyboard_lastkey &lt;= 126) {
                    cmdString += string(keyboard_lastchar);
                }
            }
        }
    }
}
//Delay message
if(ds_queue_size(messageDelayQueue) == 0) {
    canWrite = true;
}
else {
    canWrite = false;
    if(messageDelay &gt; 0) {
        messageDelay--;
    }
    else {
        sendMessage(ds_queue_dequeue(messageDelayQueue));
        messageDelay = ds_queue_dequeue(messageDelayQueue);
        messageDetail[ds_list_size(message)-1,2] = ds_queue_dequeue(messageDelayQueue);
    }
}
//Perform the action
if(keyboard_check_pressed(vk_enter)) {
    if(string_length(cmdString) &gt; 0) {
        commandAction(cmdString);
    }
}
//Typewriter effect
for(var i = 0; i &lt; messageMaxSize; i++) {
    var str = ds_list_find_value(message,i);
    if(messageDetail[i,0] &lt; string_length(str)) {
        messageDetail[i,0]++;
    }
    messageDetail[i,1] = string_copy(str,0,messageDetail[i,0]);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Print all of game's message
/*for(var i = 0; i &lt; ds_list_size(message); i++) {
    print(ds_list_find_value(message,i));
}*/
ds_list_destroy(message);
ds_list_destroy(messageHistory);
ds_list_destroy(inventory);
ds_queue_destroy(messageDelayQueue);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var xv, yv, vh, vw;
xv = view_xview[0];
yv = view_yview[0];
vh = view_hport[0];
vw = view_wport[0];
draw_text_colour(32,vh-32,cmdString,white,white,white,white,1);
blinker++;
draw_text_colour(32+string_length(cmdString)*9,vh-32,"|",white,white,white,white,abs(sin(degtorad(blinker*2))));
for(var i = 0; i &lt; ds_list_size(message); i++) {
    draw_set_font(messageDetail[i,2]);
    draw_text_colour(32,vh-32+((i-ds_list_size(message))*16),messageDetail[i,1],white,white,white,white,1);
    draw_set_font(gameFont);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
